---
- name: assert that dante user name starts with dante_
  assert:
    that: dante_user.startswith('dante_')
    fail_msg: "dante username '{{ dante_user }}' must start with 'dante_'"
  tags: srv_dante_user

- name: create dante proxy user
  ## see: https://docs.ansible.com/ansible/latest/modules/user_module.html#user-module
  user:
    name: "{{ dante_user }}"
    state: present
    ## see: https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html#hash-filters
    password: "{{ dante_pass | password_hash('sha512', dante_salt) }}"
    update_password: always
    group: users
    shell: /usr/sbin/nologin
    home: /usr/sbin
    create_home: false
    generate_ssh_key: false
  notify: restart dante service
  tags: srv_dante_user


- name: configure dante server
  template:
    src: danted.conf
    dest: /etc/danted.conf
    mode: 0644
  vars:
    ## see: https://www.inet.no/dante/doc/1.4.x/config/logging.html
    log_what: "{{ dante_verbose_log |bool |ternary('error connect disconnect', 'error') }}"
  notify: restart dante service
  tags: srv_dante_conf


- name: install foreign dante package on xenial (with workarounds)
  import_tasks: install-xenial.yml
  when: ansible_lsb.codename in ['xenial']
  tags: srv_dante_install

- name: install dante server on ubuntu bionic+
  apt:
    name: dante-server
  when: ansible_lsb.codename not in ['xenial']
  register: dante_install_bionic_result
  tags: srv_dante_install

- name: dante service workarounds
  import_tasks: service.yml
  vars:
    _stop_dante: "{{ dante_install_xenial_result is changed
                  or dante_install_bionic_result is changed }}"
  tags: srv_dante_service


- name: open/block dante port in ufw
  ufw:
    port: "{{ dante_port |string }}"
    rule: "{{ dante_direct |bool |ternary('allow','deny') }}"
  no_log: "{{ hide_secrets |bool }}"
  when: lin_firewall == 'ufw'
  tags: srv_dante_firewall

- name: open/block dante port in ferm
  ferm_port:
    port: "{{ dante_port }}"
    proto: tcp
    zone: "{{ dante_direct |bool |ternary('external','internal') }}"
    solo_zone: true
    comment: dante
  when: lin_firewall == 'ferm'
  tags:
    - skip_ansible_lint
    - srv_dante_firewall


- name: configure dante logging
  import_tasks: syslog.yml
  when: lin_use_rsyslog |bool
  tags: srv_dante_syslog
...
